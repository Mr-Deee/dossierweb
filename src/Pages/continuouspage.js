import React from "react";
import "./pages.css";

const ContinuousPage = () => {
  return (
    <div>
      <div id="about" className="section">
        <h2>About</h2>
        <p>
          Company Background: Brief history of the company, its founders, and
          the inspiration behind creating your dossier.
        </p>
        {/* Add three containers beneath container-right */}

        <div className="container-bottom">
          <div className="bottom-container">
            {" "}
            Mission Statement: "At LegacyKeeper, our mission is to provide
            individuals with a secure and efficient way to declare their assets
            and ensure that their legacy is preserved for future generations."
          </div>

          <div className="bottom-container">
            {" "}
            Security Measures: Explanation of the platform's security protocols
            to reassure users about the safety of their sensitive information.
          </div>
        </div>

        <div className="bottom-container">
          Team Members: Profiles and photos of key team members, showcasing
          their expertise and dedication to the mission.
        </div>
      </div>
      <div id="contact" className="section">
        <h2>Contact Us</h2>
        <p>
          Yes, you can debug a Flutter mobile app using Xcode on macOS Monterey.
          Flutter provides support for debugging mobile apps on both Android and
          iOS platforms. While Flutter primarily uses Android Studio or Visual
          Studio Code as the primary IDEs for development, you can still use
          Xcode for debugging Flutter apps targeting iOS devices. To debug a
          Flutter app using Xcode on macOS Monterey, follow these steps: Ensure
          you have Xcode installed on your Mac. You can download it from the Mac
          App Store or from the Apple Developer website. Open your Flutter
          project in your preferred code editor (such as Visual Studio Code or
          Android Studio). Connect your iOS device to your Mac using a USB
          cable, and ensure it's recognized by your Mac. Open your Flutter
          project's iOS directory in Xcode. You can find the iOS directory
          inside your Flutter project's directory, typically named ios. Open the
          Runner.xcworkspace file in Xcode. This file is generated by Flutter
          and contains your iOS project. Select your connected iOS device as the
          target device in Xcode. Build and run your Flutter app on the iOS
          device from Xcode. You can do this by clicking the "Run" button in
          Xcode. Once your app is running on the iOS device, you can debug it in
          Xcode by setting breakpoints, inspecting variables, and using other
          debugging tools provided by Xcode. If you encounter any issues or
          errors while debugging, Xcode will provide error messages and stack
          traces to help you diagnose and fix the problems. By following these
          steps, you can debug your Flutter mobile app using Xcode on macOS
          Monterey, just like you would with any other iOS app.
        </p>
      </div>
    </div>
  );
};

export default ContinuousPage;
